/**
 * PTVTimetableAPIVersion3Lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of V3Departure
 */
class V3Departure extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.stopId = this.constructor.getValue(obj.stopId || obj.stop_id);
        this.routeId = this.constructor.getValue(obj.routeId || obj.route_id);
        this.runId = this.constructor.getValue(obj.runId || obj.run_id);
        this.directionId = this.constructor.getValue(obj.directionId || obj.direction_id);
        this.disruptionIds = this.constructor.getValue(obj.disruptionIds || obj.disruption_ids);
        this.scheduledDepartureUtc =
          this.constructor.getValue(obj.scheduledDepartureUtc
     || obj.scheduled_departure_utc);
        this.estimatedDepartureUtc =
          this.constructor.getValue(obj.estimatedDepartureUtc
     || obj.estimated_departure_utc);
        this.atPlatform = this.constructor.getValue(obj.atPlatform || obj.at_platform);
        this.platformNumber = this.constructor.getValue(obj.platformNumber || obj.platform_number);
        this.flags = this.constructor.getValue(obj.flags);
        this.departureSequence =
          this.constructor.getValue(obj.departureSequence
     || obj.departure_sequence);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'stopId', realName: 'stop_id' },
            { name: 'routeId', realName: 'route_id' },
            { name: 'runId', realName: 'run_id' },
            { name: 'directionId', realName: 'direction_id' },
            { name: 'disruptionIds', realName: 'disruption_ids', array: true },
            {
                name: 'scheduledDepartureUtc',
                realName: 'scheduled_departure_utc',
                isDateTime: true,
                dateTimeValue: 'rfc3339',
            },
            {
                name: 'estimatedDepartureUtc',
                realName: 'estimated_departure_utc',
                isDateTime: true,
                dateTimeValue: 'rfc3339',
            },
            { name: 'atPlatform', realName: 'at_platform' },
            { name: 'platformNumber', realName: 'platform_number' },
            { name: 'flags', realName: 'flags' },
            { name: 'departureSequence', realName: 'departure_sequence' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = V3Departure;
