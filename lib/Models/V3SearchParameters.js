/**
 * PTVTimetableAPIVersion3Lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of V3SearchParameters
 */
class V3SearchParameters extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.routeTypes = this.constructor.getValue(obj.routeTypes || obj.route_types);
        this.latitude = this.constructor.getValue(obj.latitude);
        this.longitude = this.constructor.getValue(obj.longitude);
        this.maxDistance = this.constructor.getValue(obj.maxDistance || obj.max_distance);
        this.includeAddresses =
          this.constructor.getValue(obj.includeAddresses
     || obj.include_addresses);
        this.includeOutlets = this.constructor.getValue(obj.includeOutlets || obj.include_outlets);
        this.matchStopBySuburb =
          this.constructor.getValue(obj.matchStopBySuburb
     || obj.match_stop_by_suburb);
        this.matchRouteBySuburb =
          this.constructor.getValue(obj.matchRouteBySuburb
     || obj.match_route_by_suburb);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'routeTypes', realName: 'route_types', array: true },
            { name: 'latitude', realName: 'latitude' },
            { name: 'longitude', realName: 'longitude' },
            { name: 'maxDistance', realName: 'max_distance' },
            { name: 'includeAddresses', realName: 'include_addresses' },
            { name: 'includeOutlets', realName: 'include_outlets' },
            { name: 'matchStopBySuburb', realName: 'match_stop_by_suburb' },
            { name: 'matchRouteBySuburb', realName: 'match_route_by_suburb' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = V3SearchParameters;
