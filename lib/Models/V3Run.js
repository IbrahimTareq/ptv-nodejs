/**
 * PTVTimetableAPIVersion3Lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of V3Run
 */
class V3Run extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.runId = this.constructor.getValue(obj.runId || obj.run_id);
        this.routeId = this.constructor.getValue(obj.routeId || obj.route_id);
        this.routeType = this.constructor.getValue(obj.routeType || obj.route_type);
        this.finalStopId = this.constructor.getValue(obj.finalStopId || obj.final_stop_id);
        this.destinationName =
          this.constructor.getValue(obj.destinationName
     || obj.destination_name);
        this.status = this.constructor.getValue(obj.status);
        this.directionId = this.constructor.getValue(obj.directionId || obj.direction_id);
        this.runSequence = this.constructor.getValue(obj.runSequence || obj.run_sequence);
        this.expressStopCount =
          this.constructor.getValue(obj.expressStopCount
     || obj.express_stop_count);
        this.vehiclePosition =
          this.constructor.getValue(obj.vehiclePosition
     || obj.vehicle_position);
        this.vehicleDescriptor =
          this.constructor.getValue(obj.vehicleDescriptor
     || obj.vehicle_descriptor);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'runId', realName: 'run_id' },
            { name: 'routeId', realName: 'route_id' },
            { name: 'routeType', realName: 'route_type' },
            { name: 'finalStopId', realName: 'final_stop_id' },
            { name: 'destinationName', realName: 'destination_name' },
            { name: 'status', realName: 'status' },
            { name: 'directionId', realName: 'direction_id' },
            { name: 'runSequence', realName: 'run_sequence' },
            { name: 'expressStopCount', realName: 'express_stop_count' },
            { name: 'vehiclePosition', realName: 'vehicle_position', type: 'V3VehiclePosition' },
            {
                name: 'vehicleDescriptor',
                realName: 'vehicle_descriptor',
                type: 'V3VehicleDescriptor',
            },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = V3Run;
