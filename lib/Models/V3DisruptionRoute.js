/**
 * PTVTimetableAPIVersion3Lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of V3DisruptionRoute
 */
class V3DisruptionRoute extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.routeType = this.constructor.getValue(obj.routeType || obj.route_type);
        this.routeId = this.constructor.getValue(obj.routeId || obj.route_id);
        this.routeName = this.constructor.getValue(obj.routeName || obj.route_name);
        this.routeNumber = this.constructor.getValue(obj.routeNumber || obj.route_number);
        this.routeGtfsId = this.constructor.getValue(obj.routeGtfsId || obj.route_gtfs_id);
        this.direction = this.constructor.getValue(obj.direction);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'routeType', realName: 'route_type' },
            { name: 'routeId', realName: 'route_id' },
            { name: 'routeName', realName: 'route_name' },
            { name: 'routeNumber', realName: 'route_number' },
            { name: 'routeGtfsId', realName: 'route_gtfs_id' },
            { name: 'direction', realName: 'direction', type: 'V3DisruptionDirection' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = V3DisruptionRoute;
